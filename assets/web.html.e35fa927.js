import{_ as n,o as s,c as a,a as t}from"./app.0104bf31.js";const p={},e=t(`<h1 id="wink-admin-web" tabindex="-1"><a class="header-anchor" href="#wink-admin-web" aria-hidden="true">#</a> wink-admin-web</h1><blockquote><p>\u8FD9\u662F\u4E00\u4E2A\u540E\u53F0\u7BA1\u7406\u7CFB\u7EDF\u7684\u524D\u7AEF\u9875\u9762\uFF0C\u4F7F\u7528vue3+ts+element-plus+pinia\u5F00\u53D1\u7EFC\u5408\u540E\u53F0\u7BA1\u7406\u7CFB\u7EDF</p></blockquote><h2 id="\u4E3B\u9898\u8BBE\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u4E3B\u9898\u8BBE\u7F6E" aria-hidden="true">#</a> \u4E3B\u9898\u8BBE\u7F6E</h2><ol><li>scss\u53D8\u91CF\u8BBE\u7F6E</li></ol><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code>  <span class="token property"><span class="token variable">$menuText</span></span><span class="token punctuation">:</span> #bfcbd9<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$menuActiveText</span></span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$subMenuActiveText</span></span><span class="token punctuation">:</span> #f4f4f5<span class="token punctuation">;</span>

  <span class="token property"><span class="token variable">$menuBg</span></span><span class="token punctuation">:</span> #304156<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$menuHover</span></span><span class="token punctuation">:</span> #263445<span class="token punctuation">;</span>

  <span class="token property"><span class="token variable">$subMenuBg</span></span><span class="token punctuation">:</span> #1f2d3d<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$subMenuHover</span></span><span class="token punctuation">:</span> #001528<span class="token punctuation">;</span>

  <span class="token property"><span class="token variable">$sideBarWidth</span></span><span class="token punctuation">:</span> 210px<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$navbarHeight</span></span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$tagViewHeight</span></span><span class="token punctuation">:</span> 34px<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$hideSideBarWidth</span></span><span class="token punctuation">:</span> 54px<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$sideBarDuration</span></span><span class="token punctuation">:</span> 0.28s<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$tagsViewDuration</span></span><span class="token punctuation">:</span> 0.3s<span class="token punctuation">;</span>
  <span class="token property"><span class="token variable">$sideBarLogoSize</span></span><span class="token punctuation">:</span> 44<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u8BBE\u7F6Eelement\u4E3B\u9898 <ul><li>\u9009\u62E9\u4E3B\u9898\u989C\u8272</li><li>\u4E0B\u8F7Delement style\u6837\u5F0F<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">const</span> <span class="token function-variable function">getOriginalStyle</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  	<span class="token keyword">const</span> version <span class="token operator">=</span> dependencies<span class="token punctuation">[</span><span class="token string">&#39;element-plus&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;^&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  	<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://unpkg.com/element-plus@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/dist/index.css</span><span class="token template-punctuation string">\`</span></span>
  	<span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  	<span class="token keyword">return</span> <span class="token function">getStyleTemplate</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u63D2\u5165style\u6837\u5F0F\u5230html\u4E2D<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">writeStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span>elNewStyle<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  	<span class="token keyword">const</span> style <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span>
  	style<span class="token punctuation">.</span>innerText <span class="token operator">=</span> elNewStyle
  	document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li>\u8BBE\u7F6E\u81EA\u5B9A\u4E49\u4E3B\u9898\uFF0C\u4F7F\u7528pinia\u521B\u5EFAstore\uFF0C\u4FDD\u5B58\u9009\u62E9\u7684\u989C\u8272\u4FE1\u606F\uFF0C\u901A\u8FC7store\u83B7\u53D6\u989C\u8272\u53D8\u91CF\u8BBE\u7F6E\u6837\u5F0F</li></ol><h2 id="\u53F3\u4FA7\u5BFC\u822A" tabindex="-1"><a class="header-anchor" href="#\u53F3\u4FA7\u5BFC\u822A" aria-hidden="true">#</a> \u53F3\u4FA7\u5BFC\u822A</h2><ol><li>\u83B7\u53D6\u8DEF\u7531\u4FE1\u606F<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code> <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">filterRouters</span> <span class="token operator">=</span> <span class="token punctuation">(</span>routes<span class="token operator">:</span> RouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 	<span class="token keyword">const</span> childrenRoutes <span class="token operator">=</span> <span class="token function">getChildrenRoutes</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span>
 	<span class="token keyword">return</span> routes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>route <span class="token operator">=&gt;</span> <span class="token operator">!</span>childrenRoutes<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>childrenRoute <span class="token operator">=&gt;</span> childrenRoute<span class="token punctuation">.</span>path <span class="token operator">===</span> route<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">generateMenus</span><span class="token punctuation">(</span>routes<span class="token operator">:</span> RouteRecordRaw<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 	<span class="token keyword">const</span> result<span class="token operator">:</span> AdminMenuItem<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
 	routes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>item<span class="token punctuation">.</span>meta <span class="token operator">||</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>meta<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 			<span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 				result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">generateMenus</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span>
 			<span class="token punctuation">}</span>
 		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>noAuth <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>hidden <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>white<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 			<span class="token keyword">let</span> route <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>route <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span>path <span class="token operator">===</span> item<span class="token punctuation">.</span>path<span class="token punctuation">)</span>
 			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>route<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 				route <span class="token operator">=</span> <span class="token punctuation">{</span>
 					path<span class="token operator">:</span> item<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
 					title<span class="token operator">:</span> item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">,</span>
 					icon<span class="token operator">:</span> item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>icon<span class="token punctuation">,</span>
 					children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
 				<span class="token punctuation">}</span>
 				result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span>
 			<span class="token punctuation">}</span>

 			<span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> route<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 				route<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">generateMenus</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">)</span>
 			<span class="token punctuation">}</span>
 		<span class="token punctuation">}</span>
 	<span class="token punctuation">}</span><span class="token punctuation">)</span>
 	<span class="token keyword">return</span> result
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u4F7F\u7528\u7EC4\u4EF6\u6E32\u67D3\u8DEF\u7531<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
 	<span class="token keyword">import</span> <span class="token punctuation">{</span> AdminMenuItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/types&#39;</span>

 	defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token literal-property property">route</span><span class="token operator">:</span> AdminMenuItem <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
 	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-sub-menu</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>route.children &amp;&amp; route.children.length &gt; 0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>route.path<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#title</span><span class="token punctuation">&gt;</span></span>
 			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu-item</span> <span class="token attr-name">:icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>route.icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>route.title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menu-item</span><span class="token punctuation">&gt;</span></span>
 		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
 		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sidebar-item</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in route.children<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.path<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:route</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sidebar-item</span><span class="token punctuation">&gt;</span></span>
 	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-sub-menu</span><span class="token punctuation">&gt;</span></span>
 	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-menu-item</span> <span class="token attr-name">v-else</span> <span class="token attr-name">:index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>route.path<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu-item</span> <span class="token attr-name">:icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>route.icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>route.title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menu-item</span><span class="token punctuation">&gt;</span></span>
 	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-menu-item</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="\u6D4F\u89C8\u5386\u53F2" tabindex="-1"><a class="header-anchor" href="#\u6D4F\u89C8\u5386\u53F2" aria-hidden="true">#</a> \u6D4F\u89C8\u5386\u53F2</h2><p>\u901A\u8FC7router\u7684beforeEach\u51FD\u6570\uFF0C\u83B7\u53D6\u8DEF\u7531\u8DF3\u8F6C\u8BB0\u5F55\u751F\u6210\u5386\u53F2\u8BB0\u5F55\u6570\u636E\uFF0C\u4F20\u5165\u5C01\u88C5\u7684tag-view\u7EC4\u4EF6\u5C55\u793A\u5386\u53F2\u8BB0\u5F55</p><p><strong>TagView</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>to<span class="token punctuation">,</span> form<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  	<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">useUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  	<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">useApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  	document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  	<span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>getToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  		<span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>noAuth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  			<span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
  		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">.</span>hasUserInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  				<span class="token keyword">await</span> user<span class="token punctuation">.</span><span class="token function">fetchUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  			<span class="token punctuation">}</span>
  			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>noAuth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  				app<span class="token punctuation">.</span><span class="token function">addTagView</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> to<span class="token punctuation">.</span>path<span class="token punctuation">,</span> fullPath<span class="token operator">:</span> to<span class="token punctuation">.</span>fullPath<span class="token punctuation">,</span> title<span class="token operator">:</span> to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title <span class="token punctuation">}</span><span class="token punctuation">)</span>
  			<span class="token punctuation">}</span>
  			<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  		<span class="token punctuation">}</span>
  	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  		<span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>noAuth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  			<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  			<span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span>
  		<span class="token punctuation">}</span>
  	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="svg\u52A0\u8F7D" tabindex="-1"><a class="header-anchor" href="#svg\u52A0\u8F7D" aria-hidden="true">#</a> SVG\u52A0\u8F7D</h2><ol><li>\u89E3\u6790SVG\u6587\u4EF6<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code> <span class="token keyword">const</span> <span class="token function-variable function">compilerIcons</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 	<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
 	<span class="token keyword">const</span> dirs <span class="token operator">=</span> <span class="token function">readdirSync</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>dir<span class="token punctuation">)</span>
 	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> dirs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 		<span class="token keyword">const</span> file <span class="token operator">=</span> dirs<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
 		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.svg$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 			<span class="token keyword">const</span> xmlns <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">xmlns=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">XMLNS</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span>
 			<span class="token keyword">const</span> symbolId <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">icon-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
 			<span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>symbolId<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 				<span class="token keyword">const</span> svgStr <span class="token operator">=</span> <span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>dir<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
 				<span class="token keyword">const</span> svgWidtReslut <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"> width=\\&quot;(.*?)\\&quot;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>svgStr<span class="token punctuation">)</span>
 				<span class="token keyword">const</span> svgHightReslut <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"> height=\\&quot;(.*?)\\&quot;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>svgStr<span class="token punctuation">)</span>
 				<span class="token keyword">const</span> svgViewBoxReslut <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"> viewBox=\\&quot;(.*?)\\&quot;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>svgStr<span class="token punctuation">)</span>
 				<span class="token keyword">const</span> viewBox <span class="token operator">=</span>
 					svgViewBoxReslut <span class="token operator">!==</span> <span class="token keyword">null</span>
 						<span class="token operator">?</span> svgViewBoxReslut<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
 						<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">0,0,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>svgWidtReslut <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">?</span> svgWidtReslut<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token number">128</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
 								svgHightReslut <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">?</span> svgHightReslut<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token number">128</span>
 						  <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
 				<span class="token keyword">const</span> svgPath <span class="token operator">=</span> svgStr<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;svg(S*?)[^&gt;]*&gt;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;/svg&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
 				cache<span class="token punctuation">[</span>symbolId<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;symbol </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>xmlns<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> viewBox=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>viewBox<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>symbolId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>svgPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/symbol&gt;</span><span class="token template-punctuation string">\`</span></span>
 			<span class="token punctuation">}</span>
 			result <span class="token operator">+=</span> cache<span class="token punctuation">[</span>symbolId<span class="token punctuation">]</span>
 		<span class="token punctuation">}</span>
 	<span class="token punctuation">}</span>
 	<span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u8F6C\u6362\u4E3ASymbol<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code> <span class="token keyword">const</span> <span class="token function-variable function">createModuleCode</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 	<span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">compilerIcons</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 	<span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">if (typeof window !== &#39;undefined&#39;) {
 		function loadSvg() {
 		  var body = document.body;
 		  var svgDom = document.getElementById(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>opt<span class="token punctuation">.</span>customDomId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;);
 		  if(!svgDom) {
 			svgDom = document.createElementNS(&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">XMLNS</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;, &#39;svg&#39;);
 			svgDom.style.position = &#39;absolute&#39;;
 			svgDom.style.width = &#39;0&#39;;
 			svgDom.style.height = &#39;0&#39;;
 			svgDom.id = &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>opt<span class="token punctuation">.</span>customDomId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;
 			svgDom.setAttribute(&#39;xmlns&#39;,&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">XMLNS</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;);
 			svgDom.setAttribute(&#39;xmlns:link&#39;,&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">XMLNS_LINK</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;);
 		  }
 		  svgDom.innerHTML =</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;
 		  body.insertBefore(svgDom, body.lastChild);
 		}
 		if(document.readyState === &#39;loading&#39;) {
 		  document.addEventListener(&#39;DOMContentLoaded&#39;, loadSvg);
 		} else {
 		  loadSvg()
 		}
 	 }
 	 export default {}</span><span class="token template-punctuation string">\`</span></span>
 	<span class="token keyword">return</span> code
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u901A\u8FC7vite\u63D2\u4EF6\uFF0C\u63D2\u5165\u5230HTML\u4E2D<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code> <span class="token punctuation">{</span>
 	name<span class="token operator">:</span> <span class="token string">&#39;vite-svg-icons&#39;</span><span class="token punctuation">,</span>
 	<span class="token keyword">async</span> <span class="token function">load</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 		<span class="token keyword">if</span> <span class="token punctuation">(</span>id<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token constant">TURGER_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 			<span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">createModuleCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 		<span class="token punctuation">}</span>
 	<span class="token punctuation">}</span><span class="token punctuation">,</span>
 	<span class="token function-variable function">configureServer</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> middlewares <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 		middlewares<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 			<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">normalizePath</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token operator">!</span><span class="token punctuation">)</span>
 			<span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token constant">TURGER_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 				res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/javascript&#39;</span><span class="token punctuation">)</span>
 				res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Cache-Control&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;no-cache&#39;</span><span class="token punctuation">)</span>
 				<span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createModuleCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 				res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span>
 				res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>
 			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 				<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 			<span class="token punctuation">}</span>
 		<span class="token punctuation">}</span><span class="token punctuation">)</span>
 	<span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="\u8BF7\u6C42\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u8BF7\u6C42\u5C01\u88C5" aria-hidden="true">#</a> \u8BF7\u6C42\u5C01\u88C5</h2><ol><li>axios\u8BF7\u6C42\u643A\u5E26token<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>config <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 	<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">useUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 	config<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>
 		<span class="token operator">...</span>config<span class="token punctuation">.</span>headers
 	<span class="token punctuation">}</span>
 	<span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>getToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 		config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Authorization&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> user<span class="token punctuation">.</span>getToken
 	<span class="token punctuation">}</span>

 	<span class="token keyword">return</span> config
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>axios\u8FD4\u56DE\u5904\u7406\u7C7B\u578B<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token generic-function"><span class="token function">async</span> <span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token keyword">void</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 	<span class="token keyword">try</span> <span class="token punctuation">{</span>
 		<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> service<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span>RequestResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> method<span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span>config <span class="token punctuation">}</span><span class="token punctuation">)</span>
 		<span class="token keyword">const</span> result <span class="token operator">=</span> response<span class="token punctuation">.</span>data
 		<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 			<span class="token function">useUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loginout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 		<span class="token punctuation">}</span>
 		<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 			<span class="token keyword">return</span> result<span class="token punctuation">.</span>data
 		<span class="token punctuation">}</span>
 		ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>
 		<span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>
 	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 		ElMessage<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error <span class="token keyword">instanceof</span> <span class="token class-name">Error</span> <span class="token operator">?</span> error<span class="token punctuation">.</span>message <span class="token operator">:</span> <span class="token string">&#39;\u7F51\u7EDC\u8BF7\u6C42\u5931\u8D25&#39;</span><span class="token punctuation">)</span>
 		<span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
 	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="\u8DEF\u7531\u62E6\u622A" tabindex="-1"><a class="header-anchor" href="#\u8DEF\u7531\u62E6\u622A" aria-hidden="true">#</a> \u8DEF\u7531\u62E6\u622A</h2><ol><li>\u8DEF\u7531\u5143\u4FE1\u606F\u8BBE\u7F6E</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>	<span class="token keyword">interface</span> <span class="token class-name">RouteMeta</span> <span class="token punctuation">{</span>
  	<span class="token comment">// \u8DEF\u7531\u6807\u9898</span>
  	title<span class="token operator">:</span> <span class="token builtin">string</span>
  	<span class="token comment">// \u8DEF\u7531\u56FE\u6807</span>
  	icon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
  	<span class="token comment">// \u662F\u5426\u9700\u8981\u6743\u9650</span>
  	noAuth<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
  	<span class="token comment">// \u662F\u5426\u5C55\u793A\u5728\u53F3\u4FA7\u5BFC\u822A\u680F</span>
  	hidden<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u8DEF\u7531\u62E6\u622A\u8DF3\u8F6C\u5904\u7406</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>to<span class="token punctuation">,</span> form<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  	<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">useUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  	<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">useApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  	document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  	<span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>getToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  		<span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>noAuth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  			<span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
  		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">.</span>hasUserInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  				<span class="token keyword">await</span> user<span class="token punctuation">.</span><span class="token function">fetchUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  			<span class="token punctuation">}</span>
  			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>noAuth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  				app<span class="token punctuation">.</span><span class="token function">addTagView</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> to<span class="token punctuation">.</span>path<span class="token punctuation">,</span> fullPath<span class="token operator">:</span> to<span class="token punctuation">.</span>fullPath<span class="token punctuation">,</span> title<span class="token operator">:</span> to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title <span class="token punctuation">}</span><span class="token punctuation">)</span>
  			<span class="token punctuation">}</span>
  			<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  		<span class="token punctuation">}</span>
  	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  		<span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>noAuth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  			<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  			<span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span>
  		<span class="token punctuation">}</span>
  	<span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[e];function c(i,l){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","web.html.vue"]]);export{r as default};
