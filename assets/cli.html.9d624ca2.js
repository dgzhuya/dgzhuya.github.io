import{_ as n,o as s,c as a,a as t}from"./app.0104bf31.js";const p={},e=t(`<h1 id="wink-cli" tabindex="-1"><a class="header-anchor" href="#wink-cli" aria-hidden="true">#</a> wink-cli</h1><blockquote><p>wink-cli\u4F7F\u7528\u63D2\u4EF6\u65B9\u5F0F\u5F00\u53D1\uFF0C\u53EF\u4EE5\u901A\u8FC7\u6DFB\u52A0\u63D2\u4EF6\u7F16\u5199\u529F\u80FD</p></blockquote><h2 id="\u8FD0\u884C\u5165\u53E3\u51FD\u6570-pkg-core" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C\u5165\u53E3\u51FD\u6570-pkg-core" aria-hidden="true">#</a> \u8FD0\u884C\u5165\u53E3\u51FD\u6570(pkg-core)</h2><blockquote><p>pkg-core\u662Fwink-cli\u5165\u53E3,\u901A\u8FC7\u547D\u4EE4\u884C\u8C03\u7528run\u51FD\u6570\u6267\u884C</p></blockquote><h3 id="\u6267\u884C\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u529F\u80FD" aria-hidden="true">#</a> \u6267\u884C\u529F\u80FD</h3><ol><li>\u63D2\u4EF6\u8FD0\u884C\u524D\uFF0C\u521B\u5EFA\u9879\u76EE\u6587\u4EF6\u5939</li><li>\u63D2\u4EF6\u8FD0\u884C\u4E2D\uFF0C\u521B\u5EFApackage\u5BF9\u8C61\uFF0C\u7528\u4E8E\u6DFB\u52A0\u5B89\u88C5\u4F9D\u8D56</li><li>\u63D2\u4EF6\u6267\u884C\u5B8C\u6210\u540E\uFF0C\u5C06\u4F9D\u8D56package\u4FE1\u606F\u5199\u5165\u9879\u76EEpackage.json\u6587\u4EF6\u4E2D</li></ol><p><strong>\u4EE3\u7801\u793A\u4F8B</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u521B\u5EFApackCore\u4F5C\u4E3A\u5165\u53E3</span>
<span class="token keyword">const</span> pkgCore <span class="token operator">=</span> <span class="token function">createWinkCore</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u521B\u5EFA\u9879\u76EE\u6587\u4EF6\u5939</span>
	<span class="token keyword">const</span> projectName <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createPkgDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token punctuation">{</span>
		context<span class="token operator">:</span> <span class="token punctuation">{</span>
			projectName<span class="token punctuation">,</span>
			<span class="token comment">// \u521D\u59CB\u5316package.json\u4FE1\u606F</span>
			pkg<span class="token operator">:</span> <span class="token function">createPkg</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> projectName <span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>package.json\u6587\u4EF6\u7C7B\u578B\u7ED3\u6784</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">PkgType</span> <span class="token punctuation">{</span>
	name<span class="token operator">:</span> <span class="token builtin">string</span>
	version<span class="token operator">:</span> <span class="token builtin">string</span>
	description<span class="token operator">:</span> <span class="token builtin">string</span>
	main<span class="token operator">:</span> <span class="token builtin">string</span>
	scripts<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span>
	author<span class="token operator">:</span> <span class="token builtin">string</span>
	devDependencies<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span>
	<span class="token punctuation">}</span>
	keyword<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
	dependencies<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B89\u88C5\u63D2\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u63D2\u4EF6" aria-hidden="true">#</a> \u5B89\u88C5\u63D2\u4EF6</h3><ol><li>\u4F7F\u7528createWinkPlugin\u6216\u8005createWinkPack\u51FD\u6570\u521B\u5EFA\u63D2\u4EF6</li><li>pkgCore\u521B\u5EFA\u4EE5\u540E\u8C03\u7528use\u51FD\u6570\u4F20\u5165\u63D2\u4EF6\u4FE1\u606F</li></ol><p><strong>\u4EE3\u7801\u793A\u4F8B</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u521B\u5EFA\u7F16\u8F91\u63D2\u4EF6</span>
<span class="token keyword">const</span> editorPlugin <span class="token operator">=</span> <span class="token function">createWinkPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F7F\u7528\u63D2\u4EF6</span>
pkgCore<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>editorPlugin<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u63D2\u4EF6\u8BBE\u7F6E-editor-plugin" tabindex="-1"><a class="header-anchor" href="#\u63D2\u4EF6\u8BBE\u7F6E-editor-plugin" aria-hidden="true">#</a> \u63D2\u4EF6\u8BBE\u7F6E(editor-plugin)</h2><blockquote><p>editor-plugin\u662F\u4E00\u4E2A\u7F16\u8F91\u6587\u4EF6\u8BBE\u7F6E\u751F\u6210\u5305\u62EC.eslintrc\u3001.prettierc\u548C.editorConfig\u6587\u4EF6</p></blockquote><h3 id="\u8BBE\u7F6E\u6587\u4EF6\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#\u8BBE\u7F6E\u6587\u4EF6\u6A21\u677F" aria-hidden="true">#</a> \u8BBE\u7F6E\u6587\u4EF6\u6A21\u677F</h3><ul><li>prettier\u6A21\u677F<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">const</span> PrettierStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{
  	&quot;useTabs&quot;: true,
  	&quot;tabWidth&quot;: 4,
  	&quot;printWidth&quot;: 120,
  	&quot;semi&quot;: false,
  	&quot;singleQuote&quot;: true,
  	&quot;trailingComma&quot;: &quot;none&quot;,
  	&quot;arrowParens&quot;: &quot;avoid&quot;,
  	&quot;bracketSpacing&quot;: true,
  	&quot;endOfLine&quot;: &quot;crlf&quot;,
  	&quot;vueIndentScriptAndStyle&quot;: true
  }
  </span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>eslint\u6A21\u677F<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">const</span> EslintStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{
  	&quot;env&quot;: {
  		&quot;browser&quot;: true,
  		&quot;es2021&quot;: true,
  		&quot;node&quot;: true
  	},
  	&quot;extends&quot;: [&quot;plugin:vue/vue3-essential&quot;, &quot;standard&quot;, &quot;plugin:prettier/recommended&quot;],
  	&quot;parserOptions&quot;: {
  		&quot;ecmaVersion&quot;: 12,
  		&quot;parser&quot;: &quot;@typescript-eslint/parser&quot;,
  		&quot;sourceType&quot;: &quot;module&quot;
  	},
  	&quot;plugins&quot;: [&quot;vue&quot;, &quot;@typescript-eslint&quot;],
  	&quot;rules&quot;: {
  		&quot;vue/no-multiple-template-root&quot;: &quot;off&quot;,
  		&quot;no-unused-vars&quot;: &quot;off&quot;,
  		&quot;camelcase&quot;: &quot;off&quot;
  	},
  	&quot;globals&quot;: {
  		&quot;defineProps&quot;: &quot;readonly&quot;,
  		&quot;defineEmits&quot;: &quot;readonly&quot;,
  		&quot;defineExpose&quot;: &quot;readonly&quot;,
  		&quot;withDefaults&quot;: &quot;readonly&quot;
  	}
  }</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>editorConfig\u6A21\u677F<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> EditStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[*]
  indent_style = tab
  indent_size = 4
  end_of_line = crlf
  tab_width = 4
  charset = utf-8
  trim_trailing_whitespace = false
  insert_final_newline = true
  [*.{yaml,yml}]
  tab_width = 2
  </span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u6DFB\u52A0\u6240\u9700\u4F9D\u8D56\u4FE1\u606F\u548C\u6587\u4EF6\u540D\u4FE1\u606F<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">export</span> <span class="token keyword">const</span> editorTemplate<span class="token operator">:</span> EditorFile<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  	<span class="token punctuation">{</span>
  		path<span class="token operator">:</span> <span class="token string">&#39;.editorconfig&#39;</span><span class="token punctuation">,</span>
  		content<span class="token operator">:</span> EditStr<span class="token punctuation">,</span>
  		name<span class="token operator">:</span> <span class="token string">&#39;editorConfig&#39;</span>
  	<span class="token punctuation">}</span><span class="token punctuation">,</span>
  	<span class="token punctuation">{</span>
  		path<span class="token operator">:</span> <span class="token string">&#39;.prettierrc&#39;</span><span class="token punctuation">,</span>
  		content<span class="token operator">:</span> PrettierStr<span class="token punctuation">,</span>
  		name<span class="token operator">:</span> <span class="token string">&#39;prettier&#39;</span><span class="token punctuation">,</span>
  		depends<span class="token operator">:</span> <span class="token punctuation">[</span>
  			<span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;prettier&#39;</span><span class="token punctuation">,</span> isDev<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  			<span class="token punctuation">{</span>
  				name<span class="token operator">:</span> <span class="token string">&#39;eslint-config-prettier&#39;</span><span class="token punctuation">,</span>
  				isDev<span class="token operator">:</span> <span class="token boolean">true</span>
  			<span class="token punctuation">}</span><span class="token punctuation">,</span>
  			<span class="token punctuation">{</span>
  				name<span class="token operator">:</span> <span class="token string">&#39;eslint-plugin-prettier&#39;</span><span class="token punctuation">,</span>
  				isDev<span class="token operator">:</span> <span class="token boolean">true</span>
  			<span class="token punctuation">}</span>
  		<span class="token punctuation">]</span>
  	<span class="token punctuation">}</span><span class="token punctuation">,</span>
  	<span class="token punctuation">{</span>
  		path<span class="token operator">:</span> <span class="token string">&#39;.eslintrc&#39;</span><span class="token punctuation">,</span>
  		content<span class="token operator">:</span> EslintStr<span class="token punctuation">,</span>
  		name<span class="token operator">:</span> <span class="token string">&#39;eslint&#39;</span><span class="token punctuation">,</span>
  		depends<span class="token operator">:</span> <span class="token punctuation">[</span>
  			<span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;eslint&#39;</span><span class="token punctuation">,</span> isDev<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  			<span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;eslint-config-standard&#39;</span><span class="token punctuation">,</span> isDev<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  			<span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;eslint-plugin-n&#39;</span><span class="token punctuation">,</span> isDev<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  			<span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;eslint-plugin-node&#39;</span><span class="token punctuation">,</span> isDev<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  			<span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;eslint-plugin-promise&#39;</span><span class="token punctuation">,</span> isDev<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  			<span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;eslint-config-standard&#39;</span><span class="token punctuation">,</span> isDev<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  			<span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;eslint-plugin-import&#39;</span><span class="token punctuation">,</span> isDev<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  			<span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;eslint-config-standard&#39;</span><span class="token punctuation">,</span> isDev<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
  		<span class="token punctuation">]</span>
  	<span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="\u8BBE\u7F6Einquirer-prompt\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#\u8BBE\u7F6Einquirer-prompt\u4FE1\u606F" aria-hidden="true">#</a> \u8BBE\u7F6Einquirer prompt\u4FE1\u606F</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> PromptSelect <span class="token operator">=</span> <span class="token punctuation">[</span>
	<span class="token punctuation">{</span>
		type<span class="token operator">:</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span>
		message<span class="token operator">:</span> <span class="token string">&#39;\u662F\u5426\u4F7F\u7528editorConfig&#39;</span><span class="token punctuation">,</span>
		name<span class="token operator">:</span> <span class="token string">&#39;editorConfig&#39;</span><span class="token punctuation">,</span>
		<span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span>
		type<span class="token operator">:</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span>
		message<span class="token operator">:</span> <span class="token string">&#39;\u662F\u5426\u4F7F\u7528prettier&#39;</span><span class="token punctuation">,</span>
		name<span class="token operator">:</span> <span class="token string">&#39;prettier&#39;</span><span class="token punctuation">,</span>
		<span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span>
		type<span class="token operator">:</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span>
		message<span class="token operator">:</span> <span class="token string">&#39;\u662F\u5426\u4F7F\u7528eslint&#39;</span><span class="token punctuation">,</span>
		name<span class="token operator">:</span> <span class="token string">&#39;eslint&#39;</span><span class="token punctuation">,</span>
		<span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B89\u88C5\u4F9D\u8D56\u5E76\u521B\u5EFA\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u4F9D\u8D56\u5E76\u521B\u5EFA\u6587\u4EF6" aria-hidden="true">#</a> \u5B89\u88C5\u4F9D\u8D56\u5E76\u521B\u5EFA\u6587\u4EF6</h3><blockquote><p>\u7528\u6237\u9009\u62E9\u5B8C\u6210\u540E\u904D\u5386\u914D\u7F6E\u4FE1\u606F\u751F\u6210\u6587\u4EF6\u540C\u65F6\u8BBE\u7F6E\u4F9D\u8D56 <strong>\u4EE3\u7801\u793A\u4F8B</strong></p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">editorExit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token operator">:</span> PkgCtx<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> tasks <span class="token operator">=</span> files
		<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>file <span class="token operator">=&gt;</span> selectMap<span class="token punctuation">[</span>file<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>
		<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>file <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">write2File</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>path<span class="token punctuation">,</span> file<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
			<span class="token keyword">const</span> childTasks <span class="token operator">=</span> file<span class="token punctuation">.</span>depends <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span>depends<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>depend <span class="token operator">=&gt;</span> <span class="token function">addPkgDepend</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>pkg<span class="token punctuation">,</span> depend<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> childTasks <span class="token operator">?</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>childTasks<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51FD\u6570\u8BF4\u660E" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8BF4\u660E" aria-hidden="true">#</a> \u51FD\u6570\u8BF4\u660E</h2><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><blockquote><p>render\u662F\u4E00\u4E2A\u901A\u7528\u7684\u6E32\u67D3\u51FD\u6570\uFF0C\u901A\u8FC7\u8BBE\u7F6E\u6A21\u677F\u5B57\u7B26\u4E32\u548C\u4F20\u5165\u53C2\u6570\u751F\u6210\u89E3\u6790\u4FE1\u606F</p></blockquote><ul><li>\u89E3\u6790\u6E90\u4FE1\u606F\uFF0C\u4F20\u5165\u5B57\u7B26\u4E32\u4F7F\u7528%\u5206\u5272\u53D8\u91CF<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u8C03\u7528render\u51FD\u6570</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello,%val%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span><span class="token punctuation">{</span>val<span class="token operator">:</span><span class="token string">&#39;kugou&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u4F20\u5165\u53C2\u6570\uFF0C\u53C2\u6570\u901A\u8FC7ts\u7C7B\u578B\u4F53\u64CD\u63D0\u53D6\u51FA\u6E90\u5B57\u7B26\u4E32\u4E2D%%\u4E4B\u95F4\u7684\u5B57\u7B26\u4F5C\u4E3A\u53D8\u91CF<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">RenderConfig<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">string</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> reset<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
	<span class="token operator">?</span> RenderConfig<span class="token operator">&lt;</span>reset<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">never</span></span>
		<span class="token operator">?</span> <span class="token punctuation">{</span>
				<span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token constant">U</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span>
		<span class="token punctuation">}</span>
		<span class="token operator">:</span> <span class="token punctuation">{</span>
				<span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token keyword">keyof</span> RenderConfig<span class="token operator">&lt;</span>reset<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token constant">U</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span>
		<span class="token punctuation">}</span>
	<span class="token operator">:</span> <span class="token builtin">never</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>\u586B\u5165\u53C2\u6570\uFF0C\u8FD4\u56DE\u6240\u9700\u5B57\u7B26\u4E32<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u6A21\u677F\u6E32\u67D3\u51FD\u6570
 *
 * <span class="token keyword">@param</span> <span class="token parameter">source</span> \u6A21\u677F\u4FE1\u606F
 * <span class="token keyword">@param</span> <span class="token parameter">config</span> \u6A21\u677F\u914D\u7F6E
 * <span class="token keyword">@returns</span> \u5B57\u7B26\u4E32
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> render <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span><span class="token operator">&gt;</span><span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> config<span class="token operator">:</span> RenderConfig<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> len <span class="token operator">=</span> source<span class="token punctuation">.</span>length
	<span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
	<span class="token keyword">let</span> isKey <span class="token operator">=</span> <span class="token boolean">false</span>
	<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
	<span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> char <span class="token operator">=</span> source<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>char <span class="token operator">===</span> <span class="token string">&#39;\\n&#39;</span> <span class="token operator">||</span> char <span class="token operator">===</span> <span class="token string">&#39;\\t&#39;</span> <span class="token operator">||</span> char <span class="token operator">===</span> <span class="token string">&#39;\\r&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">+=</span> char
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>char <span class="token operator">===</span> <span class="token string">&#39;%&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>isKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				result <span class="token operator">+=</span> config<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
				key <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
			<span class="token punctuation">}</span>
			isKey <span class="token operator">=</span> <span class="token operator">!</span>isKey
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			key <span class="token operator">+=</span> char
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			result <span class="token operator">+=</span> char
		<span class="token punctuation">}</span>
		i<span class="token operator">++</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="getlatestversion" tabindex="-1"><a class="header-anchor" href="#getlatestversion" aria-hidden="true">#</a> getLatestVersion</h3><blockquote><p>getLatestVersion\u7528\u6765\u83B7\u53D6npm\u5305\u4F9D\u8D56\u6700\u65B0\u7248\u672C <strong>\u4EE3\u7801\u793A\u4F8B</strong></p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> shell <span class="token keyword">from</span> <span class="token string">&#39;shelljs&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getLatestVersion</span> <span class="token operator">=</span> <span class="token punctuation">(</span>packageName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span>resolve <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		shell<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">npm view </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>packageName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> version</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> silent<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>code<span class="token punctuation">,</span> stdout<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token function">resolve</span><span class="token punctuation">(</span>stdout<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jsonbyobj" tabindex="-1"><a class="header-anchor" href="#jsonbyobj" aria-hidden="true">#</a> jsonByOBJ</h3><blockquote><p>jsonByOBJ\u7528\u6765\u5C06Object\u6216\u8005Array\u8F6C\u6362\u4E3Ajson</p><p>JSON.stringify\u6CA1\u6709\u6362\u884C\uFF0C\u6240\u4EE5\u5C01\u88C5\u4E86\u8FD9\u4E2A\u51FD\u6570 <strong>\u5165\u53E3\u51FD\u6570</strong></p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> jsonByOBJ <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">object</span> <span class="token operator">|</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> indent <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">convertArray</span><span class="token punctuation">(</span>source <span class="token keyword">as</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> indent<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">convertObj</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> indent<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5DE5\u5177\u51FD\u6570</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> isArray <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> isObject <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Object]&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6570\u7EC4\u8F6C\u6362</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> convertArray <span class="token operator">=</span> <span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> indent<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;[&#39;</span>
	<span class="token keyword">const</span> len <span class="token operator">=</span> source<span class="token punctuation">.</span>length
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> item <span class="token operator">=</span> source<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
		<span class="token keyword">const</span> comma <span class="token operator">=</span> i <span class="token operator">===</span> len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;, &#39;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">jsonByOBJ</span><span class="token punctuation">(</span>item <span class="token keyword">as</span> object<span class="token punctuation">,</span> indent <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>comma<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			result <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>comma<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5BF9\u8C61\u8F6C\u6362</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> convertObj <span class="token operator">=</span> <span class="token punctuation">(</span>source<span class="token operator">:</span> object<span class="token punctuation">,</span> indent<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token string">&#39;{\\n&#39;</span>
	<span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">keyof</span> <span class="token keyword">typeof</span> source<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
	<span class="token keyword">const</span> len <span class="token operator">=</span> keys<span class="token punctuation">.</span>length
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
		<span class="token keyword">const</span> item <span class="token operator">=</span> source<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
		<span class="token keyword">const</span> tab <span class="token operator">=</span> <span class="token string">&#39;\\t&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>indent<span class="token punctuation">)</span>
		<span class="token keyword">const</span> comma <span class="token operator">=</span> i <span class="token operator">===</span> len <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;,&#39;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isObject</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>tab<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">jsonByOBJ</span><span class="token punctuation">(</span>item <span class="token keyword">as</span> object<span class="token punctuation">,</span> indent <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>comma<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			result <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>tab<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>comma<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> result <span class="token operator">+</span> <span class="token string">&#39;\\t&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>indent <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;}&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40),o=[e];function i(c,l){return s(),a("div",null,o)}var r=n(p,[["render",i],["__file","cli.html.vue"]]);export{r as default};
